// <auto-generated />
using System;
using IntershipTasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntershipTasks.Migrations
{
    [DbContext(typeof(DataBase.DatabaseContext))]
    [Migration("20220502124111_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("IntershipTasks.DataBase+Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfessorID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseID");

                    b.HasIndex("ProfessorID")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Professor", b =>
                {
                    b.Property<int>("ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProfessorID");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SupervisorProfessorID")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentID");

                    b.HasIndex("SupervisorProfessorID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+StudentCourse", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentCourses", (string)null);
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Course", b =>
                {
                    b.HasOne("IntershipTasks.DataBase+Professor", "Professor")
                        .WithOne("Course")
                        .HasForeignKey("IntershipTasks.DataBase+Course", "ProfessorID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Student", b =>
                {
                    b.HasOne("IntershipTasks.DataBase+Professor", "SupervisorProfessor")
                        .WithMany("SupervisedStudents")
                        .HasForeignKey("SupervisorProfessorID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("SupervisorProfessor");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+StudentCourse", b =>
                {
                    b.HasOne("IntershipTasks.DataBase+Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntershipTasks.DataBase+Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Professor", b =>
                {
                    b.Navigation("Course");

                    b.Navigation("SupervisedStudents");
                });

            modelBuilder.Entity("IntershipTasks.DataBase+Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
